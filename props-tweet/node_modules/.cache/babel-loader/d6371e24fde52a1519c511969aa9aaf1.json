{"ast":null,"code":"var _jsxFileName = \"/home/arun/arun-backup-data/pure-react/props-tweet/src/index.js\";\nimport moment from 'moment';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // Add the { tweet } prop, destructured\n\nfunction Tweet({\n  tweet\n}) {\n  return React.createElement(\"div\", {\n    className: \"tweet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    hash: tweet.gravatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(NameWithHandle, {\n    author: tweet.author,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Time, {\n    time: tweet.timestamp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Message, {\n    text: tweet.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(ReplyButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(RetweenButton, {\n    count: tweet.retweets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(LikeButton, {\n    count: tweet.likes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(MoreOptionsButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))));\n}\n/* The gravatar hash, passed in as hash\n   using ES6 destructuring, Is incorporated into\n   the URL and passed to the image tag as before.\n*/\n\n\nfunction Avatar({\n  hash\n}) {\n  var url = 'https://www.gravatar.com/avatar/${hash}';\n  return React.createElement(\"img\", {\n    src: url,\n    className: \"avatar\",\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n}\n\nfunction NameWithHandle({\n  author\n}) {\n  const name = author.name,\n        handle = author.handle;\n  return React.createElement(\"span\", {\n    className: \"name-with-handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"handle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"@\", handle));\n}\n\nfunction Message({\n  text\n}) {\n  return React.createElement(\"div\", {\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, text);\n}\n/* For single statement there is no need\n   of return and the braces.\n\n   For two statements or more, it need surrounding\n   braces, which then causes it to need a return.\n*/\n\n\nconst Time = ({\n  time\n}) => {\n  const timeString = moment(time).fromNow();\n  return React.createElement(\"span\", {\n    className: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, timeString);\n};\n\nconst ReplyButton = () => React.createElement(\"i\", {\n  className: \"fa fa-reply reply-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n});\n/* Remember if JSX expression inside single braces\n   evaluates to null or false, nothing is rendered\n   at all.\n*/\n\n\nfunction getRetweetCount(count) {\n  if (count > 0) {\n    return React.createElement(\"span\", {\n      className: \"retweet-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, count);\n  } else {\n    return null;\n  }\n}\n/* It is worth noting that getRetweetcount\n  function would be writen as componet insted */\n\n\nfunction Count({\n  count\n}) {\n  if (count > 0) {\n    return React.createElement(\"span\", {\n      className: \"retweet-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, count);\n  } else {\n    return null;\n  }\n}\n\nconst RetweenButton = ({\n  count\n}) => React.createElement(\"span\", {\n  className: \"retweet-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fa fa-retweet\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}), getRetweetCount(count));\n\nconst LikeButton = ({\n  count\n}) => React.createElement(\"span\", {\n  className: \"like-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, React.createElement(\"i\", {\n  className: \"fa fa-heart\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}), count > 0 && React.createElement(\"span\", {\n  className: \"like-count\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, count));\n\nconst MoreOptionsButton = () => React.createElement(\"i\", {\n  className: \"fa fa-ellipsis-h more-options-buttons\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129\n  },\n  __self: this\n}); // ...\n\n\nvar testTweet = {\n  message: \"Something about cats.\",\n  gravatar: \"xyz\",\n  author: {\n    handle: \"catperson\",\n    name: \"IAMA Cat Person\"\n  },\n  likes: 2,\n  retweets: 2,\n  timestamp: \"2019-7-1 21:24:37\"\n};\nReactDOM.render(React.createElement(Tweet, {\n  tweet: testTweet,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/arun/arun-backup-data/pure-react/props-tweet/src/index.js"],"names":["moment","React","ReactDOM","Tweet","tweet","gravatar","author","timestamp","message","retweets","likes","Avatar","hash","url","NameWithHandle","name","handle","Message","text","Time","time","timeString","fromNow","ReplyButton","getRetweetCount","count","Count","RetweenButton","LikeButton","MoreOptionsButton","testTweet","render","document","querySelector"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Add the { tweet } prop, destructured\nfunction Tweet({ tweet }) {\n    return (\n        <div className=\"tweet\">\n          <Avatar hash={tweet.gravatar}/>\n            <div className=\"content\">\n              <NameWithHandle author={tweet.author}/><Time time={tweet.timestamp}/>\n                <Message text={tweet.message}/>\n                <div className=\"buttons\">\n                    <ReplyButton/>\n                     <RetweenButton count={tweet.retweets}/>\n                     <LikeButton count={tweet.likes}/>\n                    <MoreOptionsButton/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n/* The gravatar hash, passed in as hash\n   using ES6 destructuring, Is incorporated into\n   the URL and passed to the image tag as before.\n*/\n\nfunction Avatar({ hash }) {\n    var url = 'https://www.gravatar.com/avatar/${hash}';\n    return (\n        <img \n            src={url}\n            className=\"avatar\"\n            alt=\"avatar\"/>\n    );\n}\n\nfunction NameWithHandle({ author }) {\n    const { name, handle } = author;\n    return (\n        <span className=\"name-with-handle\">\n          <span className=\"name\">{name}</span>\n          <span className=\"handle\">@{handle}</span>\n        </span>\n    );\n}\n\nfunction Message({ text }) {\n    return (\n        <div className=\"message\">\n          {text}\n        </div>\n    );\n}\n\n/* For single statement there is no need\n   of return and the braces.\n\n   For two statements or more, it need surrounding\n   braces, which then causes it to need a return.\n*/\nconst Time = ({ time }) => {\n    const timeString = moment(time).fromNow();\n\n    return(\n        <span className=\"time\">\n          {timeString}\n        </span>\n    );\n};\n\nconst ReplyButton = () => (\n    <i className=\"fa fa-reply reply-button\"></i>\n);\n\n/* Remember if JSX expression inside single braces\n   evaluates to null or false, nothing is rendered\n   at all.\n*/\n\nfunction getRetweetCount(count) {\n    if(count > 0) {\n        return (\n            <span className=\"retweet-count\">\n              {count}\n            </span>\n        );\n    } else {\n        return null;\n    }\n}\n\n\n/* It is worth noting that getRetweetcount\n  function would be writen as componet insted */\n\nfunction Count({ count }) {\n    if(count > 0) {\n        return (\n            <span className=\"retweet-count\">\n              {count}\n            </span>\n        );\n    } else {\n        return null;\n    }\n}\n\nconst RetweenButton = ({ count }) => (\n    <span className =\"retweet-button\">\n      <i className=\"fa fa-retweet\"/>\n      {getRetweetCount(count)}\n    </span>\n);\n\nconst LikeButton = ({ count }) => (\n    <span className=\"like-button\">\n      <i className=\"fa fa-heart\"/>\n    {count > 0 &&\n     <span className=\"like-count\">\n       {count}\n     </span>}\n    </span>\n);\n\nconst MoreOptionsButton = () => (\n    <i className=\"fa fa-ellipsis-h more-options-buttons\"/>\n);\n\n// ...\nvar testTweet = {\n    message: \"Something about cats.\",\n    gravatar: \"xyz\",\n    author: {\n        handle: \"catperson\",\n        name: \"IAMA Cat Person\"\n    },\n    likes: 2,\n    retweets: 2,\n    timestamp: \"2019-7-1 21:24:37\"\n};\n\nReactDOM.render(<Tweet tweet={testTweet}/>, \n    document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}